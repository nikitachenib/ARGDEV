const { EmbedBuilder } = require('discord.js');
const { SlashCommandBuilder } = require('@discordjs/builders');

module.exports = {
    data: new SlashCommandBuilder()
        .setName('serverinfo')
        .setDescription('–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Å–µ—Ä–≤–µ—Ä–∞'),
    
    async execute(interaction) {
        const guild = interaction.guild;
        
        // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ —Å–µ—Ä–≤–µ—Ä–µ
        const members = await guild.members.fetch();
        const onlineMembers = members.filter(m => m.presence?.status === 'online').size;
        const bots = members.filter(m => m.user.bot).size;
        
        // –°–æ–∑–¥–∞–µ–º embed
        const embed = new EmbedBuilder()
            .setColor('#4b0082')
            .setAuthor({ 
                name: `–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ ${guild.name}`, 
                iconURL: guild.iconURL() 
            })
            .setThumbnail(guild.iconURL({ size: 1024 }))
            .addFields(
                { name: 'üëë –í–ª–∞–¥–µ–ª–µ—Ü', value: `<@${guild.ownerId}>`, inline: true },
                { name: 'üìÖ –°–æ–∑–¥–∞–Ω', value: `<t:${Math.floor(guild.createdTimestamp / 1000)}:D>`, inline: true },
                { name: 'üë• –£—á–∞—Å—Ç–Ω–∏–∫–∏', value: `–í—Å–µ–≥–æ: ${guild.memberCount}\n–õ—é–¥–µ–π: ${guild.memberCount - bots}\n–ë–æ—Ç–æ–≤: ${bots}\n–û–Ω–ª–∞–π–Ω: ${onlineMembers}`, inline: true },
                { name: 'üìä –ö–∞–Ω–∞–ª—ã', value: `–¢–µ–∫—Å—Ç–æ–≤—ã–µ: ${guild.channels.cache.filter(c => c.isTextBased()).size}\n–ì–æ–ª–æ—Å–æ–≤—ã–µ: ${guild.channels.cache.filter(c => c.isVoiceBased()).size}`, inline: true },
                { name: 'üé≠ –†–æ–ª–∏', value: `${guild.roles.cache.size}`, inline: true },
                { name: 'üöÄ –ë—É—Å—Ç—ã', value: `–£—Ä–æ–≤–µ–Ω—å: ${guild.premiumTier}\n–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: ${guild.premiumSubscriptionCount || 0}`, inline: true }
            )
            .setFooter({ 
                text: `ID —Å–µ—Ä–≤–µ—Ä–∞: ${guild.id}` 
            })
            .setTimestamp();

        await interaction.reply({ embeds: [embed] });
    }
};