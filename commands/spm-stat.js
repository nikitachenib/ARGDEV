const { SlashCommandBuilder, EmbedBuilder } = require('discord.js');
const { status } = require('minecraft-server-util');
require('dotenv').config(); // –ß—Ç–æ–±—ã .env —Ä–∞–±–æ—Ç–∞–ª –∏ –∑–¥–µ—Å—å (–Ω–∞ –≤—Å—è–∫–∏–π)

module.exports = {
    data: new SlashCommandBuilder()
        .setName('spm-stats')
        .setDescription('—Å—Ç–∞—Ç—É—Å SPM'),
    
    async execute(interaction) {
        await interaction.deferReply();

        try {
            const serverIP = process.env.SPM_SERVER_IP;
            const serverPort = parseInt(process.env.SERVER_PORT) || 25565;

            const res = await status(serverIP, { port: serverPort });

            const embed = new EmbedBuilder()
                .setTitle(`üü¢ –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–µ—Ä–∞ ${serverIP}`)
                .setColor('#2ecc71')
                .addFields(
                    { name: 'üë• –û–Ω–ª–∞–π–Ω', value: `**${res.players.online}/${res.players.max}**`, inline: true },
                    { name: 'üîß –í–µ—Ä—Å–∏—è', value: res.version.name, inline: true },
                    { name: 'üìú MOTD', value: res.motd.clean || '‚Äî' }
                )
                .setFooter({ text: `–ó–∞–ø—Ä–æ—à–µ–Ω–æ ${new Date().toLocaleString()}` });

            await interaction.editReply({ embeds: [embed] });
        } catch (error) {
            await interaction.editReply('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞ / –Ω–µ —É–¥–∞—ë—Ç—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ IP');
            console.error(error);
            console.error("IP –Ω–µ —á–∏—Ç–∞–µ—Ç—Å—è || –Ω–µ —Ç–æ—Ç IP")
        }
    }
}; 